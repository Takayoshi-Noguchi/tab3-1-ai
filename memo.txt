■フォルダ階層
app
 |_shared
 | |_guard
 |   |_log.guard.ts
 |_aa101-top
 | |_common
 | | |_az101-tab
 | | | |_az101-tab.service.ts
 | | | |_az101-tab.ts
 | | |_az102-content-header
 | |   |_az102-content-header.component.html
 | |   |_az102-content-header.component.scss
 | |   |_az102-content-header.component.ts
 | |   |_az102-content-header.service.ts
 | |_aa201g01
 | | |_aa201g01.component.html
 | | |_aa201g01.component.scss
 | | |_aa201g01.component.ts
 | |_aa202g01
     ・・・
 | |_aa101-top-routing.module.ts
 | |_aa101-top.component.html
 | |_aa101-top.component.scss
 | |_aa101-top.component.ts
 | |_aa101-top.module.ts

 |_app-routing.module.ts
 |_app.coponent.html
 |_app.coponent.scss
 |_app.coponent.ts
 |_app.module.ts

 |_main-routing.module.ts
 |_main.coponent.html
 |_main.coponent.scss
 |_main.coponent.ts
 |_main.module.ts


■コマンド
ng generate component main
 その後、ディレクトリ移動 main → app
ng generate module main
ng generate module main-routing --flat --module=main

ng generate component aa101-top --module=main

ng generate component aa101-top/aa201g01 --module=main
ng generate component aa101-top/aa202g01 --module=main

ng generate service aa101-top/common/az101-tab/az101-tab
ng generate interface aa101-top/common/az101-tab/az101-tab
ng generate class aa101-top/common/az101-tab/az101-tab-define

■自分向けの注意事項
・routing.module.ts には、RouterModule をexportすることを忘れないこと
・<router-outlet>が存在するコンポーネントと同じ階層に、routing.module.tsが必要かもしれない
・<router-outlet>で表示されてコンポーネントでさらに<router-outlet>を定義する場合、
　パスの定義には children を定義する必要がありそう。
・ReactiveFormsModuleがaa101-top.module.tsに定義すると、aa101-top.component.htmlで使えた。
　app.module.tsのみ定義しても使えなかった。なぜかはわからない。。。

■タブ仕様
✓各画面で業務リンクする場合、タブを追加し、追加されたタブを表示状態にする
　追加対象画面がすでに表示されている場合、タブを追加しない
✓タブをクリックすると、タブに応じた画面が表示される
✓各画面はルーティングを経由して表示する（ルートガードのチェックが必要なため）
・タブ切り替えはタブの下に太線で表現する。以下を参考にする
　https://kodocode.net/design-css-tab/

■トップ画面仕様
✓初期表示ではタブ情報は表示しない
✓照会ボタン押下時、複数タブとタブの一番左に表示されるタブに応じた画面が表示される。それ以外のタブは表示されない。
✓クリアボタン押下時、タブはクリアされる
✓アドレスバーに直接URLを入力（http://localhost:4200/aa201g01 など）しても、タブコンテンツに画面が表示されない
✓トップ画面のHTMLには、タブも含む
✓検索条件のテキストを追加
✓検索条件のテキストでEnter押下すると、照会処理が実行できる
✓クリアボタン押下すると、検索条件のテキストの値がクリアされる

■コンテンツヘッダー仕様
・コンテンツヘッダーには以下の要素を保持する
　　画面名、検索番号、閉じるボタン、メッセージ
・コンテンツヘッダーは、タブとタブコンテンツの間に表示される
・メッセージは、各業務から設定されたメッセージが表示される
　メッセージの詳細は、メッセージ仕様に記載する
・閉じるボタンを押下すると、表示中のタブを閉じる。
・閉じるボタン押下時に表示するタブは以下の通り
　・閉じる対象のタブの右にタブが存在する場合、右のタブが表示される（Chromeのタブと同じ仕様）
　・右に存在しない場合、左のタブが表示される。
　・右も左も存在しない場合、すべて閉じられたこととして、タブコンテンツには何も表示されない状態とする

■メッセージ仕様
・メッセージ種類は、正常・警告・エラー・成功の４つが存在する
・メッセージが一つの場合、メッセージは表示される
・メッセージが複数の場合、以下の仕様とする。
　・最優先のメッセージが１行のみ表示され、「開く」リンクを押下すると、すべてのメッセージがサブ画面で表示される。
　・メッセージがすべて正常・成功の場合、メッセージスタイルは正常とする。
　・メッセージの中に一つでもエラーが存在する場合、メッセージスタイルはエラーとする
　・メッセージの中にエラーが存在せず、一つでも警告が存在する場合、メッセージスタイルは警告とする
　・メッセージの優先順位は以下のとおりとする
　　　エラー　＞　警告　＞　正常・成功

※タブ改善して、キャッシュされなくなった。次回はこの問題を解決する　→2024/02/25に解消
※業務リンク時の画面保存処理がヘン　業務でkeepを実行するのではなく、タブ切り替えで実行するようにする　次回の課題

